---
- name: ensure install nvim (neovim)
  dnf:
    name: neovim
    state: present
  tags:
    - dotfiles
    - nvim

- name: check if nvim autoload directory exists
  stat:
    path: "{{ home_path }}/.local/share/nvim/site/autoload/"
  become: false
  register: autoload
  tags:
    - dotfiles
    - nvim

- name: create nvim autoload directory
  file:
    path: "{{ home_path }}/.local/share/nvim/site/autoload/"
    state: directory
    mode: 0755
  become: false
  when: not autoload.stat.exists
  tags:
    - dotfiles
    - nvim

- name: ensure install vim-plug
  get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "{{ home_path }}/.local/share/nvim/site/autoload/plug.vim"
  become: false
  tags:
    - dotfiles
    - nvim

- name: check if nvim config directory exists
  stat:
    path: "{{ home_path }}/.config/nvim"
  become: false
  register: nvim
  tags:
    - dotfiles
    - nvim

- name: create nvim config directory
  file:
    path: "{{ home_path }}/.config/nvim"
    state: directory
    mode: 0755
  become: false
  when: not nvim.stat.exists
  tags:
    - dotfiles
    - nvim

- name: ensure copy nvim dotfiles
  copy:
    src: "nvim/{{ item }}"
    dest: "{{ home_path }}/.config/nvim/{{ item }}"
  with_items:
    - init.vim
  become: false
  tags:
    - dotfiles
    - nvim

- name: check if nvim plugins directory exists
  stat:
    path: "{{ home_path }}/.local/share/nvim/site/plugged/"
  become: false
  register: plugged
  tags:
    - dotfiles
    - nvim

- name: create nvim plugins directory
  file:
    path: "{{ home_path }}/.local/share/nvim/site/plugged/"
    state: directory
    mode: 0755
  become: false
  when: not plugged.stat.exists
  tags:
    - dotfiles
    - nvim

- name: ensure install nvim plugins
  shell: "nvim +{{ item }} +qall"
  with_items:
    - PlugUpdate
    - PlugUpgrade
  become: false
  when: not plugged.stat.exists
  tags:
    - dotfiles
    - nvim
